generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model feature_categories {
  feature_category_id   Int        @id @default(autoincrement())
  feature_category_name String     @db.VarChar(100)
  features              features[]
}

model features {
  feature_id         Int                @id @default(autoincrement())
  category_id        Int
  feature_value      String?            @db.VarChar(100)
  feature_key        String?            @db.VarChar(100)
  feature_input_type featureinputtype?
  feature_categories feature_categories @relation(fields: [category_id], references: [feature_category_id], onDelete: NoAction, onUpdate: NoAction, map: "feature_categories_fk")
  plan_features      plan_features[]
}

model organisations {
  organisation_id   Int             @id @default(autoincrement())
  organisation_name String          @db.VarChar(100)
  subscriptions     subscriptions[]
  users             users[]
}

model plan_features {
  plan_feature_id Int       @id @default(autoincrement())
  plan_id         Int?
  feature_id      Int?
  boolean_value   Boolean?
  text_value      String?   @db.VarChar(100)
  numeric_value   Int?
  features        features? @relation(fields: [feature_id], references: [feature_id], onDelete: NoAction, onUpdate: NoAction, map: "feature_fk")
  plans           plans?    @relation(fields: [plan_id], references: [plan_id], onDelete: NoAction, onUpdate: NoAction, map: "plan_fk")
}

model plans {
  plan_id       Int             @id @default(autoincrement())
  plan_name     String?         @db.VarChar(100)
  price_monthly Int?
  price_yearly  Int?
  userlimit     Int?
  description   String?
  plan_features plan_features[]
  subscriptions subscriptions[]
}

model subscriptions {
  subscription_id Int                 @id @default(autoincrement())
  organisation_id Int?
  plan_id         Int?
  status          subscriptionstatus? @default(active)
  start_date      DateTime?           @default(now()) @db.Timestamp(6)
  end_date        DateTime?           @db.Timestamp(6)
  organisations   organisations?      @relation(fields: [organisation_id], references: [organisation_id], onDelete: NoAction, onUpdate: NoAction, map: "organisation_fk")
  plans           plans?              @relation(fields: [plan_id], references: [plan_id], onDelete: NoAction, onUpdate: NoAction, map: "plan_sub_fk")
}

model users {
  user_id             Int            @id @default(autoincrement())
  name                String?        @db.VarChar(50)
  organisation_id     Int?
  user_type           usertype?
  is_system_generated Boolean?       @default(false)
  is_active           Boolean?       @default(true)
  organisations       organisations? @relation(fields: [organisation_id], references: [organisation_id], onDelete: NoAction, onUpdate: NoAction, map: "user_organisation_fk")
}

enum featureinputtype {
  select
  input
  radio
}

enum subscriptionstatus {
  active
  cancelled
  expired
}

enum usertype {
  org_admin
  super_admin
  org_user
  super_admin_user
}
